{
	"id": "61d8b5ebcc7260c8f4e4ecb15bc188c9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Enum.sol": {
				"content": "// SPDX-License-Identifier: \r\npragma solidity ^0.8.3;\r\n\r\ncontract Enum {\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Enum.sol": {
				"Enum": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Enum.sol\":57:77  contract Enum {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Enum.sol\":57:77  contract Enum {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f7ea20f3e1c0c811018c6eb440a049b3ef9867fc0aaae0afed0c9ebb7190ab9c64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220f7ea20f3e1c0c811018c6eb440a049b3ef9867fc0aaae0afed0c9ebb7190ab9c64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xEA KECCAK256 RETURN 0xE1 0xC0 0xC8 GT ADD DUP13 PUSH15 0xB440A049B3EF9867FC0AAAE0AFED0C SWAP15 0xBB PUSH18 0x90AB9C64736F6C6343000807003300000000 ",
							"sourceMap": "57:20:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220f7ea20f3e1c0c811018c6eb440a049b3ef9867fc0aaae0afed0c9ebb7190ab9c64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xEA KECCAK256 RETURN 0xE1 0xC0 0xC8 GT ADD DUP13 PUSH15 0xB440A049B3EF9867FC0AAAE0AFED0C SWAP15 0xBB PUSH18 0x90AB9C64736F6C6343000807003300000000 ",
							"sourceMap": "57:20:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 77,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 77,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 77,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 77,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 77,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 77,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 57,
									"end": 77,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 77,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 57,
									"end": 77,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 77,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 77,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 57,
									"end": 77,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 77,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57,
									"end": 77,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 77,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 77,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 77,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 77,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 77,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 77,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 77,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f7ea20f3e1c0c811018c6eb440a049b3ef9867fc0aaae0afed0c9ebb7190ab9c64736f6c63430008070033",
									".code": [
										{
											"begin": 57,
											"end": 77,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 77,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 77,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 77,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 77,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 77,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Enum.sol\":\"Enum\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Enum.sol\":{\"keccak256\":\"0xe621fc024109c7a721883bc1c708ab2c0dda4587c6b0507406abef143be064c4\",\"urls\":[\"bzz-raw://3d7a4726b88e28daa672d40b4992339606e47d9caf071a4b9ded743da46b680c\",\"dweb:/ipfs/QmYGoJ2BvGkJr9igbtztAZ2pFDLHyEyLFMqc1QRkyEW4dK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Enum.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Enum.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Enum.sol": {
				"ast": {
					"absolutePath": "contracts/Enum.sol",
					"exportedSymbols": {
						"Enum": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".3"
							],
							"nodeType": "PragmaDirective",
							"src": "30:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Enum",
							"nameLocation": "66:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "57:20:0",
							"usedErrors": []
						}
					],
					"src": "30:47:0"
				},
				"id": 0
			}
		}
	}
}