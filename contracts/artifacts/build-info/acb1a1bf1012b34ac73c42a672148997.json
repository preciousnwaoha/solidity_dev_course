{
	"id": "acb1a1bf1012b34ac73c42a672148997",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Hash.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.3;\r\n\r\n/*\r\nCryptographic Hash Functions are widely used in solidity.\r\nSome of the use cases are:\r\n1. Sign a signature\r\n2. Come up with a unique id\r\n3. Create a contract that is protected from front running (commit reveal scheme\r\n*/\r\n\r\ncontract HashFunc {\r\n    \r\n}\r\n\r\n\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Hash.sol": {
				"HashFunc": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Hash.sol\":288:316  contract HashFunc {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Hash.sol\":288:316  contract HashFunc {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e93803624acfe8098b3cbda72bb3f558001ad3c97cb313aac21fb64dd63d9edf64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220e93803624acfe8098b3cbda72bb3f558001ad3c97cb313aac21fb64dd63d9edf64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 CODESIZE SUB PUSH3 0x4ACFE8 MULMOD DUP12 EXTCODECOPY 0xBD 0xA7 0x2B 0xB3 CREATE2 PC STOP BYTE 0xD3 0xC9 PUSH29 0xB313AAC21FB64DD63D9EDF64736F6C6343000807003300000000000000 ",
							"sourceMap": "288:28:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220e93803624acfe8098b3cbda72bb3f558001ad3c97cb313aac21fb64dd63d9edf64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 CODESIZE SUB PUSH3 0x4ACFE8 MULMOD DUP12 EXTCODECOPY 0xBD 0xA7 0x2B 0xB3 CREATE2 PC STOP BYTE 0xD3 0xC9 PUSH29 0xB313AAC21FB64DD63D9EDF64736F6C6343000807003300000000000000 ",
							"sourceMap": "288:28:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 288,
									"end": 316,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 288,
									"end": 316,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 288,
									"end": 316,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 288,
									"end": 316,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 288,
									"end": 316,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 288,
									"end": 316,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 288,
									"end": 316,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 288,
									"end": 316,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 288,
									"end": 316,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 316,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 288,
									"end": 316,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 288,
									"end": 316,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 288,
									"end": 316,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 288,
									"end": 316,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 288,
									"end": 316,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 288,
									"end": 316,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 288,
									"end": 316,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 288,
									"end": 316,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 316,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 288,
									"end": 316,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 316,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e93803624acfe8098b3cbda72bb3f558001ad3c97cb313aac21fb64dd63d9edf64736f6c63430008070033",
									".code": [
										{
											"begin": 288,
											"end": 316,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 288,
											"end": 316,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 288,
											"end": 316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 288,
											"end": 316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 288,
											"end": 316,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Hash.sol\":\"HashFunc\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Hash.sol\":{\"keccak256\":\"0x63169af09a97855f0bfa52319338235ec196c3c4b98dc0fda6b6a40a22d2d8a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba2ec1127cc640d9216e11e905bb5b0402c1a76c1ee006813f98bcc5a0202a83\",\"dweb:/ipfs/QmZ3yFzoUaYdUxacjoUxq3tzFc16YA1kBefchwp1RamScD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Hash.sol": {
				"ast": {
					"absolutePath": "contracts/Hash.sol",
					"exportedSymbols": {
						"HashFunc": [
							2
						]
					},
					"id": 3,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".3"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "HashFunc",
							"nameLocation": "297:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "288:28:0",
							"usedErrors": []
						}
					],
					"src": "33:289:0"
				},
				"id": 0
			}
		}
	}
}