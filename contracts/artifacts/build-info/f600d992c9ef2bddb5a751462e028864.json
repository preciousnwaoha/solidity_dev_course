{
	"id": "f600d992c9ef2bddb5a751462e028864",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Enum.sol": {
				"content": "// SPDX\r\npragma solidity ^0.8.3;\r\n\r\ncontract Enum {\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Enum.sol": {
				"Enum": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Enum.sol\":36:56  contract Enum {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Enum.sol\":36:56  contract Enum {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b363e171bbd98de0738b154ede5062bd57b9d22ba38605e9735c3d2a3003997c64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220b363e171bbd98de0738b154ede5062bd57b9d22ba38605e9735c3d2a3003997c64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 PUSH4 0xE171BBD9 DUP14 0xE0 PUSH20 0x8B154EDE5062BD57B9D22BA38605E9735C3D2A30 SUB SWAP10 PUSH29 0x64736F6C63430008070033000000000000000000000000000000000000 ",
							"sourceMap": "36:20:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220b363e171bbd98de0738b154ede5062bd57b9d22ba38605e9735c3d2a3003997c64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 PUSH4 0xE171BBD9 DUP14 0xE0 PUSH20 0x8B154EDE5062BD57B9D22BA38605E9735C3D2A30 SUB SWAP10 PUSH29 0x64736F6C63430008070033000000000000000000000000000000000000 ",
							"sourceMap": "36:20:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 36,
									"end": 56,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 36,
									"end": 56,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36,
									"end": 56,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36,
									"end": 56,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 36,
									"end": 56,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36,
									"end": 56,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 36,
									"end": 56,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 36,
									"end": 56,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 36,
									"end": 56,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36,
									"end": 56,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36,
									"end": 56,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 36,
									"end": 56,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 36,
									"end": 56,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 36,
									"end": 56,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 36,
									"end": 56,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36,
									"end": 56,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36,
									"end": 56,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36,
									"end": 56,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36,
									"end": 56,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 36,
									"end": 56,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36,
									"end": 56,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b363e171bbd98de0738b154ede5062bd57b9d22ba38605e9735c3d2a3003997c64736f6c63430008070033",
									".code": [
										{
											"begin": 36,
											"end": 56,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 36,
											"end": 56,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36,
											"end": 56,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36,
											"end": 56,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36,
											"end": 56,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36,
											"end": 56,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Enum.sol\":\"Enum\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Enum.sol\":{\"keccak256\":\"0x3ed7c450fac5df08f9537d4e3c768076d333f24ef4f18ace393546169687381e\",\"urls\":[\"bzz-raw://ffa1b1cf29290b9880d3d47a215bf9dd6b07f53a81bea0aaedc8d8aed8583ea4\",\"dweb:/ipfs/Qmd79hyX4yg2RqKJJMrArkKatrSfCdGZcqKrmm1bqkJ8tB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Enum.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Enum.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Enum.sol": {
				"ast": {
					"absolutePath": "contracts/Enum.sol",
					"exportedSymbols": {
						"Enum": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".3"
							],
							"nodeType": "PragmaDirective",
							"src": "9:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Enum",
							"nameLocation": "45:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "36:20:0",
							"usedErrors": []
						}
					],
					"src": "9:47:0"
				},
				"id": 0
			}
		}
	}
}