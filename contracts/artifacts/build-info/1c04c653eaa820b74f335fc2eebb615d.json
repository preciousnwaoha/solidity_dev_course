{
	"id": "1c04c653eaa820b74f335fc2eebb615d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Hash.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.3;\r\n\r\n/*\r\nCryptographic Hash Functions are widely used in solidity.\r\nSome of the use cases are:\r\n1. Sign a signature\r\n2. Come up with a unique id\r\n3. Create a contract that is protected from front running (commit reveal scheme\r\n*/\r\n\r\n// How to use the Keccak\r\n\r\ncontract HashFunc {\r\n    \r\n}\r\n\r\n\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Hash.sol": {
				"HashFunc": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Hash.sol\":316:344  contract HashFunc {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Hash.sol\":316:344  contract HashFunc {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122032249634d8a39f07235835644eee3b55ec84b2f31d7316d2d3f2cced910b4d7264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122032249634d8a39f07235835644eee3b55ec84b2f31d7316d2d3f2cced910b4d7264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0x24 SWAP7 CALLVALUE 0xD8 LOG3 SWAP16 SMOD 0x23 PC CALLDATALOAD PUSH5 0x4EEE3B55EC DUP5 0xB2 RETURN SAR PUSH20 0x16D2D3F2CCED910B4D7264736F6C634300080700 CALLER ",
							"sourceMap": "316:28:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122032249634d8a39f07235835644eee3b55ec84b2f31d7316d2d3f2cced910b4d7264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0x24 SWAP7 CALLVALUE 0xD8 LOG3 SWAP16 SMOD 0x23 PC CALLDATALOAD PUSH5 0x4EEE3B55EC DUP5 0xB2 RETURN SAR PUSH20 0x16D2D3F2CCED910B4D7264736F6C634300080700 CALLER ",
							"sourceMap": "316:28:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 316,
									"end": 344,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 316,
									"end": 344,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 316,
									"end": 344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 316,
									"end": 344,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 316,
									"end": 344,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 316,
									"end": 344,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 316,
									"end": 344,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 316,
									"end": 344,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 316,
									"end": 344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 316,
									"end": 344,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 316,
									"end": 344,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 316,
									"end": 344,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 316,
									"end": 344,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 316,
									"end": 344,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 316,
									"end": 344,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 316,
									"end": 344,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 316,
									"end": 344,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 316,
									"end": 344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 316,
									"end": 344,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 316,
									"end": 344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 316,
									"end": 344,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122032249634d8a39f07235835644eee3b55ec84b2f31d7316d2d3f2cced910b4d7264736f6c63430008070033",
									".code": [
										{
											"begin": 316,
											"end": 344,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 316,
											"end": 344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 316,
											"end": 344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 344,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Hash.sol\":\"HashFunc\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Hash.sol\":{\"keccak256\":\"0x5924dd554f4f74ed669b7a9ca8eb85f2e17a0cae09a5e1eaa080c2a4448c9db6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ce4a8b2d8cb758e6717c504900fcadbe8618b94ec0312e41165f2455c4a3817\",\"dweb:/ipfs/QmRDUmCBps2hDgYNj4GK98qiVepg9KnXstKfpdaZba5jhw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Hash.sol": {
				"ast": {
					"absolutePath": "contracts/Hash.sol",
					"exportedSymbols": {
						"HashFunc": [
							2
						]
					},
					"id": 3,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".3"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "HashFunc",
							"nameLocation": "325:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "316:28:0",
							"usedErrors": []
						}
					],
					"src": "33:317:0"
				},
				"id": 0
			}
		}
	}
}