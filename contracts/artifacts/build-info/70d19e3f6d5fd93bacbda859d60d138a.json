{
	"id": "70d19e3f6d5fd93bacbda859d60d138a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Enum.sol": {
				"content": "pragma solidity ^0.8.3;\r\n\r\ncontract Enum {\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Enum.sol": {
				"Enum": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Enum.sol\":27:51  contract Enum {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Enum.sol\":27:51  contract Enum {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201a87dca1c5aec7d7fd42c6fd9786b17315933533cc0fe629f73cd3d4e912e25264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212201a87dca1c5aec7d7fd42c6fd9786b17315933533cc0fe629f73cd3d4e912e25264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE DUP8 0xDC LOG1 0xC5 0xAE 0xC7 0xD7 REVERT TIMESTAMP 0xC6 REVERT SWAP8 DUP7 0xB1 PUSH20 0x15933533CC0FE629F73CD3D4E912E25264736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "27:24:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212201a87dca1c5aec7d7fd42c6fd9786b17315933533cc0fe629f73cd3d4e912e25264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE DUP8 0xDC LOG1 0xC5 0xAE 0xC7 0xD7 REVERT TIMESTAMP 0xC6 REVERT SWAP8 DUP7 0xB1 PUSH20 0x15933533CC0FE629F73CD3D4E912E25264736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "27:24:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 51,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27,
									"end": 51,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27,
									"end": 51,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 51,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 51,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 51,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27,
									"end": 51,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 51,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27,
									"end": 51,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 51,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 51,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27,
									"end": 51,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 51,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27,
									"end": 51,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27,
									"end": 51,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 51,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 51,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 51,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 51,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27,
									"end": 51,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 51,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201a87dca1c5aec7d7fd42c6fd9786b17315933533cc0fe629f73cd3d4e912e25264736f6c63430008070033",
									".code": [
										{
											"begin": 27,
											"end": 51,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27,
											"end": 51,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27,
											"end": 51,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 51,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 51,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 51,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Enum.sol\":\"Enum\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Enum.sol\":{\"keccak256\":\"0x1519e0d347ebd9f1ff5db2897b4db0a11bf6655139cfa940a7d323fcfe23e26d\",\"urls\":[\"bzz-raw://18903fb2d1470f11fe6b71af4744510acdeff478aa91713728e355811ffedf5f\",\"dweb:/ipfs/QmYsTmZjy6wH2HVzDbfRysCH4CUCyjvvvZyJQHUeUECa3g\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Enum.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Enum.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Enum.sol": {
				"ast": {
					"absolutePath": "contracts/Enum.sol",
					"exportedSymbols": {
						"Enum": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".3"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Enum",
							"nameLocation": "36:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "27:24:0",
							"usedErrors": []
						}
					],
					"src": "0:51:0"
				},
				"id": 0
			}
		}
	}
}